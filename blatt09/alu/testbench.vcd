$date
  Mon Jun 26 16:22:17 2023
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module alu_tb $end
$var reg 32 ! a[31:0] $end
$var reg 32 " b[31:0] $end
$var reg 32 # result[31:0] $end
$var reg 3 $ alucontrol[2:0] $end
$var reg 1 % zero $end
$scope module testobject $end
$var reg 32 & a[31:0] $end
$var reg 32 ' b[31:0] $end
$var reg 3 ( alucontrol[2:0] $end
$var reg 32 ) result[31:0] $end
$var reg 1 * zero $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b00000000000001000000000000001000 !
b00000000000000000110000100011000 "
b00000000000000000000000000001000 #
b000 $
0%
b00000000000001000000000000001000 &
b00000000000000000110000100011000 '
b000 (
b00000000000000000000000000001000 )
0*
#10000000
b00000000000001000110000100011000 #
b001 $
b001 (
b00000000000001000110000100011000 )
#20000000
b00000000000001000110000100100000 #
b010 $
b010 (
b00000000000001000110000100100000 )
#30000000
b011 $
b011 (
#40000000
b100 $
b100 (
#50000000
b101 $
b101 (
#60000000
b00000000000000111001111011110000 #
b110 $
b110 (
b00000000000000111001111011110000 )
#70000000
b00000000000000000000000000000000 #
b111 $
1%
b111 (
b00000000000000000000000000000000 )
1*
#80000000
b00000000000000000000000000001000 #
b000 $
0%
b000 (
b00000000000000000000000000001000 )
0*
