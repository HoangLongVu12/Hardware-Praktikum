$date
  Fri May 05 18:27:41 2023
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module mux41_tb $end
$var reg 3 ! in0[2:0] $end
$var reg 3 " in1[2:0] $end
$var reg 3 # in2[2:0] $end
$var reg 3 $ in3[2:0] $end
$var reg 2 % selector[1:0] $end
$var reg 3 & yields[2:0] $end
$scope module multiplex $end
$var reg 3 ' i0[2:0] $end
$var reg 3 ( i1[2:0] $end
$var reg 3 ) i2[2:0] $end
$var reg 3 * i3[2:0] $end
$var reg 2 + sel[1:0] $end
$var reg 3 , y[2:0] $end
$var reg 2 - not_sel[1:0] $end
$var reg 2 . s[1:0] $end
$var reg 3 / and1[2:0] $end
$var reg 3 0 and2[2:0] $end
$var reg 3 1 and3[2:0] $end
$var reg 3 2 and4[2:0] $end
$scope module not0 $end
$var reg 1 3 input1 $end
$var reg 1 4 not_output $end
$var reg 1 5 notgate $end
$upscope $end
$scope module not1 $end
$var reg 1 6 input1 $end
$var reg 1 7 not_output $end
$var reg 1 8 notgate $end
$upscope $end
$scope module gate_assignment(0) $end
$scope module and_output1 $end
$var reg 1 9 input1 $end
$var reg 1 : input2 $end
$var reg 1 ; input3 $end
$var reg 1 < and_output $end
$var reg 1 = andgate $end
$upscope $end
$scope module and_output2 $end
$var reg 1 > input1 $end
$var reg 1 ? input2 $end
$var reg 1 @ input3 $end
$var reg 1 A and_output $end
$var reg 1 B andgate $end
$upscope $end
$scope module and_output3 $end
$var reg 1 C input1 $end
$var reg 1 D input2 $end
$var reg 1 E input3 $end
$var reg 1 F and_output $end
$var reg 1 G andgate $end
$upscope $end
$scope module and_output4 $end
$var reg 1 H input1 $end
$var reg 1 I input2 $end
$var reg 1 J input3 $end
$var reg 1 K and_output $end
$var reg 1 L andgate $end
$upscope $end
$scope module orout $end
$var reg 1 M input1 $end
$var reg 1 N input2 $end
$var reg 1 O input3 $end
$var reg 1 P input4 $end
$var reg 1 Q or_result $end
$var reg 1 R orgate $end
$upscope $end
$upscope $end
$scope module gate_assignment(1) $end
$scope module and_output1 $end
$var reg 1 S input1 $end
$var reg 1 T input2 $end
$var reg 1 U input3 $end
$var reg 1 V and_output $end
$var reg 1 W andgate $end
$upscope $end
$scope module and_output2 $end
$var reg 1 X input1 $end
$var reg 1 Y input2 $end
$var reg 1 Z input3 $end
$var reg 1 [ and_output $end
$var reg 1 \ andgate $end
$upscope $end
$scope module and_output3 $end
$var reg 1 ] input1 $end
$var reg 1 ^ input2 $end
$var reg 1 _ input3 $end
$var reg 1 ` and_output $end
$var reg 1 a andgate $end
$upscope $end
$scope module and_output4 $end
$var reg 1 b input1 $end
$var reg 1 c input2 $end
$var reg 1 d input3 $end
$var reg 1 e and_output $end
$var reg 1 f andgate $end
$upscope $end
$scope module orout $end
$var reg 1 g input1 $end
$var reg 1 h input2 $end
$var reg 1 i input3 $end
$var reg 1 j input4 $end
$var reg 1 k or_result $end
$var reg 1 l orgate $end
$upscope $end
$upscope $end
$scope module gate_assignment(2) $end
$scope module and_output1 $end
$var reg 1 m input1 $end
$var reg 1 n input2 $end
$var reg 1 o input3 $end
$var reg 1 p and_output $end
$var reg 1 q andgate $end
$upscope $end
$scope module and_output2 $end
$var reg 1 r input1 $end
$var reg 1 s input2 $end
$var reg 1 t input3 $end
$var reg 1 u and_output $end
$var reg 1 v andgate $end
$upscope $end
$scope module and_output3 $end
$var reg 1 w input1 $end
$var reg 1 x input2 $end
$var reg 1 y input3 $end
$var reg 1 z and_output $end
$var reg 1 { andgate $end
$upscope $end
$scope module and_output4 $end
$var reg 1 | input1 $end
$var reg 1 } input2 $end
$var reg 1 !" input3 $end
$var reg 1 "" and_output $end
$var reg 1 #" andgate $end
$upscope $end
$scope module orout $end
$var reg 1 $" input1 $end
$var reg 1 %" input2 $end
$var reg 1 &" input3 $end
$var reg 1 '" input4 $end
$var reg 1 (" or_result $end
$var reg 1 )" orgate $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b000 !
b001 "
b010 #
b011 $
b00 %
b000 &
b000 '
b001 (
b010 )
b011 *
b00 +
b000 ,
b11 -
b00 .
b000 /
b000 0
b000 1
b000 2
03
14
15
06
17
18
19
1:
0;
0<
0=
1>
0?
1@
0A
0B
0C
1D
0E
0F
0G
0H
0I
1J
0K
0L
0M
0N
0O
0P
0Q
0R
1S
1T
0U
0V
0W
1X
0Y
0Z
0[
0\
0]
1^
1_
0`
0a
0b
0c
1d
0e
0f
0g
0h
0i
0j
0k
0l
1m
1n
0o
0p
0q
1r
0s
0t
0u
0v
0w
1x
0y
0z
0{
0|
0}
0!"
0""
0#"
0$"
0%"
0&"
0'"
0("
0)"
#10000000
b01 %
b001 &
b01 +
b001 ,
b10 -
b01 .
b001 0
13
04
05
0:
1?
1A
1B
0D
1I
1N
1Q
1R
0T
1Y
0^
1c
0n
1s
0x
1}
#20000000
b10 %
b010 &
b10 +
b010 ,
b01 -
b10 .
b000 0
b010 1
03
14
15
16
07
08
09
1:
0>
0?
0A
0B
1C
1D
1H
0I
0N
0Q
0R
0S
1T
0X
0Y
1]
1^
1`
1a
1b
0c
1i
1k
1l
0m
1n
0r
0s
1w
1x
1|
0}
#30000000
b11 %
b011 &
b11 +
b011 ,
b00 -
b11 .
b000 1
b011 2
13
04
05
0:
1?
0D
1I
1K
1L
1P
1Q
1R
0T
1Y
0^
0`
0a
1c
1e
1f
0i
1j
0n
1s
0x
1}
#40000000
b10 %
b010 &
b10 +
b010 ,
b01 -
b10 .
b010 1
b000 2
03
14
15
1:
0?
1D
0I
0K
0L
0P
0Q
0R
1T
0Y
1^
1`
1a
0c
0e
0f
1i
0j
1k
1l
1n
0s
1x
0}
#50000000
b11 %
b011 &
b11 +
b011 ,
b00 -
b11 .
b000 1
b011 2
13
04
05
0:
1?
0D
1I
1K
1L
1P
1Q
1R
0T
1Y
0^
0`
0a
1c
1e
1f
0i
1j
0n
1s
0x
1}
#60000000
